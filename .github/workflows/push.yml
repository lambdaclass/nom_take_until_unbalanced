name: PR

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ '*' ]
    types: [opened, synchronize, reopened, ready_for_review, labeled, unlabeled]

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Run lints
    runs-on: ubuntu-22.04
    steps:
    - name: Install Rust Stable
      uses: dtolnay/rust-toolchain@stable
      with:
          components: rustfmt, clippy
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 
    - name: Format
      run: cargo fmt --all -- --check
    - name: clippy
      run: cargo clippy --all -- -D warnings
    - name: Changelog
      uses: dangoslen/changelog-enforcer@v3
      with:
        skipLabels: pipelines,coverage

  test:
    strategy:
      matrix:
        build-type: ['std', 'no_std', 'wasm32']
    name: Run tests
    runs-on: ubuntu-22.04
    steps:
    - name: Install Rust Stable
      uses: dtolnay/rust-toolchain@stable
    - name: Install test dependencies
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-llvm-cov,wasm-pack
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up cargo cache
      uses: Swatinem/rust-cache@v2
    - name: Run tests
      run: |
        case ${{ matrix.build-type }} in
        'std')
          cargo llvm-cov test --all-features --output-path lcov.info --lcov
          ;;
        'no_std')
          cargo t --all --no-default-features
          ;;
        'wasm32')
          wasm-pack test --node --no-default-features
          ;;
        esac
    - name: Upload coverage to codecov.io
      if: matrix.build-type == 'std'
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: lcov.info
        fail_ci_if_error: true
